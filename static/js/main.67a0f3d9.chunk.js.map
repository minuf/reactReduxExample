{"version":3,"sources":["_helpers/fake-backend.js","_helpers/history.js","_constants/alert.constants.js","_constants/user.constants.js","_constants/client.constants.js","_constants/product.constants.js","_reducers/authentication.reducer.js","_reducers/index.js","_reducers/registration.reducer.js","_reducers/users.reducer.js","_reducers/alert.reducer.js","_reducers/client.reducer.js","_reducers/product.reducer.js","_helpers/store.js","_helpers/auth-header.js","_actions/alert.actions.js","_services/user.service.js","_services/client.service.js","_services/product.service.js","_actions/user.actions.js","_actions/client.actions.js","_actions/product.actions.js","_components/PrivateRoute.jsx","HomePage/HomePage.jsx","LoginPage/LoginPage.jsx","RegisterPage/RegisterPage.jsx","App/App.jsx","serviceWorker.js","index.js"],"names":["users","history","createBrowserHistory","alertConstants","userConstants","clientConstants","productConstants","user","initialState","loggedIn","console","log","rootReducer","combineReducers","authentication","state","action","type","loggingIn","registration","registering","loading","items","error","map","id","deleting","filter","userCopy","deleteError","alert","message","clients","lastId","length","creating","client","unshift","updating","name","clientCopy","products","parseInt","product","title","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","alertActions","success","clear","userService","login","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","localStorage","setItem","logout","register","getAll","getById","update","delete","removeItem","response","text","data","parse","ok","status","window","location","reload","statusText","Promise","reject","clientService","create","clientName","productService","productTitle","mutate","mutation","gql","result","createPost","query","posts","updatePost","ApolloClient","uri","cache","InMemoryCache","userActions","from","dispatch","push","failure","toString","request","clientActions","productActions","PrivateRoute","Component","component","rest","roles","render","props","HomePage","useState","selectedTab","setSelectedTab","useSelector","useDispatch","handleTab","tab","useEffect","className","firstName","onClick","prompt","handleCreateClient","index","key","handleUpdateClient","to","clientsComponent","handleCreateProduct","handleUpdateProduct","LoginPage","inputs","setInputs","submitted","setSubmitted","useLocation","handleChange","e","target","value","onSubmit","preventDefault","pathname","onChange","RegisterPage","lastName","setUser","App","listen","exact","path","Boolean","hostname","match","realFetch","url","opts","resolve","setTimeout","endsWith","find","x","authenticate","Math","max","catch","configureFakeBackend","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.67a0f3d9.chunk.js","sourcesContent":["// array in local storage for registered users\n// let users = JSON.parse(localStorage.getItem('users')) || [];\nlet users = [];\n    \nexport function configureFakeBackend() {\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const { method, headers } = opts;\n        const body = opts.body && JSON.parse(opts.body);\n\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(handleRoute, 500);\n\n            function handleRoute() {\n                switch (true) {\n                    case url.endsWith('/users/authenticate') && method === 'POST':\n                        return authenticate();\n                    case url.endsWith('/users/register') && method === 'POST':\n                        return register();\n                    // case url.endsWith('/users') && method === 'GET':\n                    //     return getUsers();\n                    // case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                    //     return deleteUser();\n                    default:\n                        // pass through any requests not handled above\n                        return realFetch(url, opts)\n                            .then(response => resolve(response))\n                            .catch(error => reject(error));\n                }\n            }\n\n            // route functions\n\n            function authenticate() {\n                const { username, password } = body;\n                const user = users.find(x => x.username === username && x.password === password);\n                if (!user) return error('Username or password is incorrect');\n                return ok({\n                    id: user.id,\n                    username: user.username,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    token: 'fake-jwt-token'\n                });\n            }\n\n            function register() {\n                const user = body;\n    \n                if (users.find(x => x.username === user.username)) {\n                    return error(`Username  ${user.username} is already taken`);\n                }\n    \n                // assign user id and a few other properties then save\n                user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n                users.push(user);\n                localStorage.setItem('users', JSON.stringify(users));\n\n                return ok();\n            }\n    \n            function getUsers() {\n                if (!isLoggedIn()) return unauthorized();\n\n                return ok(users);\n            }\n    \n            function deleteUser() {\n                if (!isLoggedIn()) return unauthorized();\n    \n                users = users.filter(x => x.id !== idFromUrl());\n                localStorage.setItem('users', JSON.stringify(users));\n                return ok();\n            }\n\n            // helper functions\n\n            function ok(body) {\n                resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) });\n            }\n\n            function unauthorized() {\n                resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })) });\n            }\n\n            function error(message) {\n                resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) });\n            }\n\n            function isLoggedIn() {\n                return headers['Authorization'] === 'Bearer fake-jwt-token';\n            }\n    \n            function idFromUrl() {\n                const urlParts = url.split('/');\n                return parseInt(urlParts[urlParts.length - 1]);\n            }\n        });\n    }\n}","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR'\n};","export const userConstants = {\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n    \n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE'    \n};","export const clientConstants = {\n\n    GETALL_REQUEST: 'CLIENTS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'CLIENTS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'CLIENTS_GETALL_FAILURE',\n\n    UPDATE_REQUEST: 'CLIENTS_UPDATE_REQUEST',\n    UPDATE_SUCCESS: 'CLIENTS_UPDATE_SUCCESS',\n    UPDATE_FAILURE: 'CLIENTS_UPDATE_FAILURE',\n\n    CREATE_REQUEST: 'CLIENTS_CREATE_REQUEST',\n    CREATE_SUCCESS: 'CLIENTS_CREATE_SUCCESS',\n    CREATE_FAILURE: 'CLIENTS_CREATE_FAILURE',\n\n    DELETE_REQUEST: 'CLIENTS_DELETE_REQUEST',\n    DELETE_SUCCESS: 'CLIENTS_DELETE_SUCCESS',\n    DELETE_FAILURE: 'CLIENTS_DELETE_FAILURE'\n};","export const productConstants = {\n\n    GETALL_REQUEST: 'PRODUCTS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'PRODUCTS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'PRODUCTS_GETALL_FAILURE',\n\n    UPDATE_REQUEST: 'PRODUCTS_UPDATE_REQUEST',\n    UPDATE_SUCCESS: 'PRODUCTS_UPDATE_SUCCESS',\n    UPDATE_FAILURE: 'PRODUCTS_UPDATE_FAILURE',\n\n    CREATE_REQUEST: 'PRODUCTS_CREATE_REQUEST',\n    CREATE_SUCCESS: 'PRODUCTS_CREATE_SUCCESS',\n    CREATE_FAILURE: 'PRODUCTS_CREATE_FAILURE',\n\n    DELETE_REQUEST: 'PRODUCTS_DELETE_REQUEST',\n    DELETE_SUCCESS: 'PRODUCTS_DELETE_SUCCESS',\n    DELETE_FAILURE: 'PRODUCTS_DELETE_FAILURE'\n};","import { userConstants } from '../_constants';\n\n// localStorage.clear();\n// let user = JSON.parse(localStorage.getItem('user'));\n// let user = localStorage.getItem('user');\nlet user = {}\nconst initialState = user ? { loggedIn: true, user } : {};\nconsole.log(\"INIT AUTH \" + user)\n\nexport function authentication(state = initialState, action) {\n    switch (action.type) {\n        case userConstants.LOGIN_REQUEST:\n            return {\n                loggingIn: true,\n                user: action.user\n            };\n        case userConstants.LOGIN_SUCCESS:\n            return {\n                loggedIn: true,\n                user: action.user\n            };\n        case userConstants.LOGIN_FAILURE:\n            return {};\n        case userConstants.LOGOUT:\n            return {};\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\n\nimport { authentication } from './authentication.reducer';\nimport { registration } from './registration.reducer';\nimport { users } from './users.reducer';\nimport { alert } from './alert.reducer';\nimport { clients } from './client.reducer';\nimport { products } from './product.reducer';\n\nconst rootReducer = combineReducers({\n    authentication,\n    registration,\n    users,\n    alert,\n    clients,\n    products\n});\n\nexport default rootReducer;","import { userConstants } from '../_constants';\n\nexport function registration(state = {}, action) {\n    switch (action.type) {\n        case userConstants.REGISTER_REQUEST:\n            return { registering: true };\n        case userConstants.REGISTER_SUCCESS:\n            return {};\n        case userConstants.REGISTER_FAILURE:\n            return {};\n        default:\n            return state\n    }\n}","import { userConstants } from '../_constants';\n\nexport function users(state = {}, action) {\n    switch (action.type) {\n        case userConstants.GETALL_REQUEST:\n            return {\n                loading: true\n            };\n        case userConstants.GETALL_SUCCESS:\n            return {\n                items: action.users\n            };\n        case userConstants.GETALL_FAILURE:\n            return {\n                error: action.error\n            };\n        case userConstants.DELETE_REQUEST:\n            // add 'deleting:true' property to user being deleted\n            return {\n                ...state,\n                items: state.items.map(user =>\n                    user.id === action.id\n                        ? { ...user, deleting: true }\n                        : user\n                )\n            };\n        case userConstants.DELETE_SUCCESS:\n            // remove deleted user from state\n            return {\n                items: state.items.filter(user => user.id !== action.id)\n            };\n        case userConstants.DELETE_FAILURE:\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n            return {\n                ...state,\n                items: state.items.map(user => {\n                    if (user.id === action.id) {\n                        // make copy of user without 'deleting:true' property\n                        const { deleting, ...userCopy } = user;\n                        // return copy of user with 'deleteError:[error]' property\n                        return { ...userCopy, deleteError: action.error };\n                    }\n\n                    return user;\n                })\n            };\n        default:\n            return state\n    }\n}","import { alertConstants } from '../_constants';\n\nexport function alert(state = {}, action) {\n    switch (action.type) {\n        case alertConstants.SUCCESS:\n            return {\n                type: 'alert-success',\n                message: action.message\n            };\n        case alertConstants.ERROR:\n            return {\n                type: 'alert-danger',\n                message: action.message\n            };\n        case alertConstants.CLEAR:\n            return {};\n        default:\n            return state\n    }\n}","import { clientConstants } from '../_constants';\n\nexport function clients(state = {}, action) {\n    switch (action.type) {\n        case clientConstants.GETALL_REQUEST:\n            return {\n                loading: true\n            };\n        case clientConstants.GETALL_SUCCESS:\n            return {\n                items: action.clients,\n                lastId: action.clients[action.clients.length - 1].id\n            };\n        case clientConstants.GETALL_FAILURE:\n            return {\n                error: action.error\n            };\n        case clientConstants.CREATE_REQUEST:\n            return {\n                ...state,\n                creating: true\n            };\n        case clientConstants.CREATE_SUCCESS:\n            action.client.id = state.lastId + 1\n            state.items.unshift(action.client)\n            return {\n                ...state,\n                lastId: action.client.id,\n                creating: false\n            };\n        case clientConstants.CREATE_FAILURE:\n            return {\n                ...state,\n                error: action.error,\n                creating: false\n            };\n        case clientConstants.UPDATE_REQUEST:\n            return {\n                ...state,\n                items: state.items.map(client =>\n                    client.id === action.client.id\n                        ? { ...client, updating: true }\n                        : client\n                )\n            };\n        case clientConstants.UPDATE_SUCCESS:\n            return {\n                ...state,\n                items: state.items.map(client =>\n                    client.id === action.client.id\n                        ? { ...client, name: action.client.name, updating: false }\n                        : client\n                )\n            };\n        case clientConstants.UPDATE_FAILURE:\n            return {\n                ...state,\n                error: action.error\n            };\n        case clientConstants.DELETE_REQUEST:\n            // add 'deleting:true' property to user being deleted\n            return {\n                ...state,\n                items: state.items.map(client =>\n                    client.id === action.id\n                        ? { ...client, deleting: true }\n                        : client\n                )\n            };\n        case clientConstants.DELETE_SUCCESS:\n            // remove deleted user from state\n            return {\n                ...state,\n                items: state.items.filter(client => client.id !== action.id)\n            };\n        case clientConstants.DELETE_FAILURE:\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n            return {\n                ...state,\n                items: state.items.map(client => {\n                    if (client.id === action.id) {\n                        // make copy of user without 'deleting:true' property\n                        const { deleting, ...clientCopy } = client;\n                        // return copy of user with 'deleteError:[error]' property\n                        return { ...clientCopy, deleteError: action.error };\n                    }\n\n                    return client;\n                })\n            };\n        default:\n            return state\n    }\n}","import { productConstants } from '../_constants';\n\nexport function products(state = {}, action) {\n    switch (action.type) {\n        case productConstants.GETALL_REQUEST:\n            return {\n                loading: true\n            };\n        case productConstants.GETALL_SUCCESS:\n            return {\n                items: action.products,\n                lastId: parseInt(action.products[action.products.length - 1].id)\n            };\n        case productConstants.GETALL_FAILURE:\n            return {\n                error: action.error\n            };\n        case productConstants.CREATE_REQUEST:\n            return {\n                ...state,\n                creating: true\n            };\n        case productConstants.CREATE_SUCCESS:\n            action.product.id = '' + (state.lastId + 1) + ''\n            state.items.unshift(action.product)\n            return {\n                ...state,\n                lastId: state.lastId + 1,\n                creating: false\n            };\n        case productConstants.CREATE_FAILURE:\n            return {\n                ...state,\n                error: action.error,\n                creating: false\n            };\n        case productConstants.UPDATE_REQUEST:\n            return {\n                ...state,\n                items: state.items.map(product =>\n                    product.id === action.product.id\n                        ? { ...product, updating: true }\n                        : product\n                )\n            };\n        case productConstants.UPDATE_SUCCESS:\n            console.log(action);\n            return {\n                ...state,\n                items: state.items.map(product =>\n                    product.id === action.product.id\n                        ? { ...product, title: action.product.title, updating: false }\n                        : product\n                )\n            };\n        case productConstants.UPDATE_FAILURE:\n            return {\n                error: action.error\n            };\n        case productConstants.DELETE_REQUEST:\n            // add 'deleting:true' property to user being deleted\n            return {\n                ...state,\n                items: state.items.map(client =>\n                    client.id === action.id\n                        ? { ...client, deleting: true }\n                        : client\n                )\n            };\n        case productConstants.DELETE_SUCCESS:\n            // remove deleted user from state\n            return {\n                items: state.items.filter(client => client.id !== action.id)\n            };\n        case productConstants.DELETE_FAILURE:\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n            return {\n                ...state,\n                items: state.items.map(client => {\n                    if (client.id === action.id) {\n                        // make copy of user without 'deleting:true' property\n                        const { deleting, ...clientCopy } = client;\n                        // return copy of user with 'deleteError:[error]' property\n                        return { ...clientCopy, deleteError: action.error };\n                    }\n\n                    return client;\n                })\n            };\n        default:\n            return state\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../_reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);","export function authHeader() {\n    // return authorization header with jwt token\n    let user = {}\n    // let user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.token) {\n        return { 'Authorization': 'Bearer ' + user.token };\n    } else {\n        return {};\n    }\n}","import { alertConstants } from '../_constants';\n\nexport const alertActions = {\n    success,\n    error,\n    clear\n};\n\nfunction success(message) {\n    return { type: alertConstants.SUCCESS, message };\n}\n\nfunction error(message) {\n    return { type: alertConstants.ERROR, message };\n}\n\nfunction clear() {\n    return { type: alertConstants.CLEAR };\n}","import { authHeader } from '../_helpers';\n\nexport const userService = {\n    login,\n    logout,\n    register,\n    getAll,\n    getById,\n    update,\n    delete: _delete\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`http://localhost:3000/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('user', JSON.stringify(user));\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`http://localhost:3000/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`http://localhost:3000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`http://localhost:3000/users/register`, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`http://localhost:3000/users/${user.id}`, requestOptions).then(handleResponse);;\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    const requestOptions = {\n        method: 'DELETE',\n        headers: authHeader()\n    };\n\n    return fetch(`http://localhost:3000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                window.location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","import { authHeader } from '../_helpers';\n\nexport const clientService = {\n    create,\n    getAll,\n    getById,\n    update,\n    delete: _delete\n};\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`https://jsonplaceholder.typicode.com/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`https://jsonplaceholder.typicode.com/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction create(clientName) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: `{\"name\": \"${clientName}\"}`\n    };\n\n    return fetch(`https://jsonplaceholder.typicode.com/users`, requestOptions).then(handleResponse);\n}\n\nfunction update(client, clientName) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\n        body: `{\"id\": ${client.id}, \"name\": \"${clientName}\"}`\n    };\n\n    return fetch(`https://jsonplaceholder.typicode.com/users/${client.id}`, requestOptions).then(response => {\n        if (response.status === 500) { // this is because in jsonplaceholder/users dont accept id that not exists (only has 10)\n            client.name = clientName;\n            return client;\n        }\n        handleResponse(response);\n    });;\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    const requestOptions = {\n        method: 'DELETE',\n        headers: authHeader()\n    };\n\n    return fetch(`https://jsonplaceholder.typicode.com/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        console.log(data);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                // logout();\n                window.location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","import { authHeader } from '../_helpers';\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\n\nexport const productService = {\n    create,\n    getAll,\n    update,\n    delete: _delete\n};\n\nconst client = new ApolloClient({\n    uri: 'https://graphqlzero.almansi.me/api',\n    cache: new InMemoryCache()\n  });\n\n\nfunction getAll() {\n\n return client.query({ query: gql`\n    {\n        posts(options: {paginate: {limit: 10}}) {\n            data {\n              id\n              title\n            }\n            meta {\n              totalCount\n            }\n          }\n    }`\n    })\n.then(result => {\n  return JSON.parse(JSON.stringify(result.data.posts.data));;\n});\n}\n\nfunction create(productTitle) {\n    return client.mutate({mutation: gql `\n    mutation {\n        createPost(input: {title: \"${productTitle}\", body: \"\"}) {\n          id\n          title\n          body\n        }\n      }\n    `})\n    \n.then(result => result.data.createPost);\n}\n\nfunction update(product, productTitle) {\n  console.log(\"TITLEEEE: \" + productTitle)\n    return client.mutate({mutation: gql `\n    mutation {\n        updatePost(id: ${product.id}, input: {title: \"${productTitle}\"}) {\n          id\n          title\n        }\n      }\n    `})\n    \n.then(result => {\n  if (result.status === 500) { // this is because in jsonplaceholder/products dont accept id that not exists (only has 100)\n    product.title = productTitle;\n    return product;\n  }\n  return result.data.updatePost\n  });\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return client.mutate({mutation: gql `\n        mutation  {\n            deletePost(id: ${id})\n          }\n    `})\n    \n.then(result => console.log(result));\n}","import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\n\nexport const userActions = {\n    login,\n    logout,\n    register,\n    getAll,\n    delete: _delete\n};\n\nfunction login(username, password, from) {\n    return dispatch => {\n        dispatch(request({ username }));\n\n        userService.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    history.push(from);\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        userService.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    history.push('/login');\n                    dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}","import { clientConstants } from '../_constants';\nimport { clientService } from '../_services';\nimport { alertActions } from './';\n\nexport const clientActions = {\n    create,\n    getAll,\n    update,\n    delete: _delete\n};\n\nfunction create(clientName) {\n    return dispatch => {\n        dispatch(request(clientName));\n\n        clientService.create(clientName)\n            .then(\n                client => { \n                    dispatch(success(client));\n                    dispatch(alertActions.success('Created successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(clientName) { return { type: clientConstants.CREATE_REQUEST, clientName } }\n    function success(client) { return { type: clientConstants.CREATE_SUCCESS, client } }\n    function failure(error) { return { type: clientConstants.CREATE_FAILURE, error } }\n}\n\nfunction update(client, clientName) {\n    return dispatch => {\n        dispatch(request(client));\n\n        clientService.update(client, clientName)\n            .then(\n                client => { \n                    dispatch(success(client));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(client) { return { type: clientConstants.UPDATE_REQUEST, client } }\n    function success(client) { return { type: clientConstants.UPDATE_SUCCESS, client } }\n    function failure(error) { return { type: clientConstants.UPDATE_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        clientService.getAll()\n            .then(\n                clients => dispatch(success(clients)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: clientConstants.GETALL_REQUEST } }\n    function success(clients) { return { type: clientConstants.GETALL_SUCCESS, clients } }\n    function failure(error) { return { type: clientConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        clientService.delete(id)\n            .then(\n                client => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: clientConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: clientConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: clientConstants.DELETE_FAILURE, id, error } }\n}","import { productConstants } from '../_constants';\nimport { productService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\n\nexport const productActions = {\n    create,\n    getAll,\n    update,\n    delete: _delete\n};\n\nfunction create(productTitle) {\n    return dispatch => {\n        dispatch(request(productTitle));\n\n        productService.create(productTitle)\n            .then(\n                product => { \n                    dispatch(success(product));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(productTitle) { return { type: productConstants.CREATE_REQUEST, productTitle } }\n    function success(product) { return { type: productConstants.CREATE_SUCCESS, product } }\n    function failure(error) { return { type: productConstants.CREATE_FAILURE, error } }\n}\n\nfunction update(product, productTitle) {\n    return dispatch => {\n        dispatch(request(product));\n\n        productService.update(product, productTitle)\n            .then(\n                product => { \n                    // console.log(product);\n                    dispatch(success(product));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(product) { return { type: productConstants.UPDATE_REQUEST, product } }\n    function success(product) { return { type: productConstants.UPDATE_SUCCESS, product } }\n    function failure(error) { return { type: productConstants.UPDATE_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        productService.getAll()\n            .then(\n                products => dispatch(success(products)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: productConstants.GETALL_REQUEST } }\n    function success(products) { return { type: productConstants.GETALL_SUCCESS, products } }\n    function failure(error) { return { type: productConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        productService.delete(id)\n            .then(\n                product => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: productConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: productConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: productConstants.DELETE_FAILURE, id, error } }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\n    return (\n        <Route {...rest} render={props => {\n            // if (!localStorage.getItem('user')) {\n            //     // not logged in so redirect to login page with the return url\n            //     return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n            // }\n\n            // logged in so return component\n            return <Component {...props} />\n        }} />\n    );\n}\n\nexport { PrivateRoute };","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { clientActions, productActions } from '../_actions';\n\nfunction HomePage() {\n    const [selectedTab, setSelectedTab] = useState(1);\n\n    const clients = useSelector(state => state.clients);\n    const products = useSelector(state => state.products);\n    const user = useSelector(state => state.authentication.user);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(clientActions.getAll());\n        dispatch(productActions.getAll());\n    }, [dispatch]);\n\n    function handleCreateClient() {\n        var clientName = prompt(\"New Client name:\", \"Harry Potter\");\n        dispatch(clientActions.create(clientName));\n    }\n\n    function handleUpdateClient(client) {\n        var clientName = prompt(\"New Client name:\", \"Harry Potter\");\n        dispatch(clientActions.update(client, clientName));\n    }\n\n    function handleDeleteClient(id) {\n        dispatch(clientActions.delete(id));\n    }\n\n    function handleCreateProduct() {\n        var productTitle = prompt(\"New Product name:\", \"Conga 8788\");\n        dispatch(productActions.create(productTitle));\n    }\n\n    function handleUpdateProduct(product) {\n        var productTitle = prompt(\"New product name:\", \"Aspirador Conga\")\n        dispatch(productActions.update(product, productTitle));\n    }\n\n    function handleDeleteProduct(id) {\n        dispatch(productActions.delete(id));\n    }\n\n    function handleTab(tab) {\n        setSelectedTab(tab)\n    }\n\n    function clientsComponent(clients) {\n        return(\n            <div className=\"col-lg-10 offset-lg-1\">\n            <h3>All clients:</h3>\n            \n            {clients.error && <span className=\"text-danger\">ERROR: {clients.error}</span>}\n            {clients.loading ? <em>Loading clients...</em>\n            : clients.creating ? <em> - Creating...</em>\n                : <button onClick={() => handleCreateClient()} className=\"text-primary\">NEW CLIENT</button>}\n            {clients.items &&\n                <ul>\n                    {clients.items.map((client, index) =>\n                        <li key={client.id}>\n                            {client.name}\n                            {\n                                client.deleting ? <em> - Deleting...</em>\n                                : client.updating ? <em> - Updating...</em>\n                                : client.deleteError ? <span className=\"text-danger\"> - ERROR: {client.deleteError}</span>\n                                : <span> - \n                                    <button onClick={() => handleDeleteClient(client.id)} className=\"text-primary\">Delete</button>\n                                    <button onClick={() => handleUpdateClient(client)} className=\"text-primary\">Update</button>\n                                </span>\n                            }\n                        </li>\n                    )}\n                </ul>\n            }\n            <p>\n                <Link to=\"/login\">Logout</Link>\n            </p>\n                <span>Fetched from jsonPlaceHolder in json format</span>\n        </div>\n        );\n    }\n\n    function productsComponent(product) {\n        return(\n            <div className=\"col-lg-10 offset-lg-1\">\n            <h3>All products:</h3>\n            \n            {product.error && <span className=\"text-danger\">ERROR: {clients.error}</span>}\n            {product.loading ? <em>Loading products...</em>\n                : <button onClick={() => handleCreateProduct()} className=\"text-primary\">NEW PRODUCT</button>}\n            {product.items &&\n                <ul>\n                    {product.items.map((product, index) =>\n                        <li key={product.id}>\n                            {product.title}\n                            {\n                                product.deleting ? <em> - Deleting...</em>\n                                : product.updating ? <em> - Updating...</em>\n                                : product.deleteError ? <span className=\"text-danger\"> - ERROR: {product.deleteError}</span>\n                                : <span> - \n                                    <button onClick={() => handleDeleteProduct(product.id)} className=\"text-primary\">Delete</button>\n                                    <button onClick={() => handleUpdateProduct(product)} className=\"text-primary\">Update</button>\n                                </span>\n                            }\n                        </li>\n                    )}\n                </ul>\n            }\n            <p>\n                <Link to=\"/login\">Logout</Link>\n            </p>\n            <span>Fetched from GraphQLZero in GraphQl format</span>\n\n        </div>\n        );\n    }\n\n    return (\n        <div>\n            <div className=\"col-lg-8 offset-lg-2\">\n                <h1>Hi {user.firstName}!</h1>\n                <button onClick={() => handleTab(1)} className=\"text-primary\">CLIENTS</button>\n                <button onClick={() => handleTab(2)} className=\"text-primary\">PRODUCTS</button>\n            </div>\n            {selectedTab === 1 ? clientsComponent(clients) : productsComponent(products)}\n\n        </div>\n    );\n}\n\nexport { HomePage };","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { userActions } from '../_actions';\n\nfunction LoginPage() {\n    const [inputs, setInputs] = useState({\n        username: '',\n        password: ''\n    });\n    const [submitted, setSubmitted] = useState(false);\n    const { username, password } = inputs;\n    const loggingIn = useSelector(state => state.authentication.loggingIn);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    // reset login status\n    useEffect(() => { \n        dispatch(userActions.logout()); \n    }, [dispatch]);\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        setInputs(inputs => ({ ...inputs, [name]: value }));\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        setSubmitted(true);\n        if (username && password) {\n            // get return url from location state or default to home page\n            const { from } = location.state || { from: { pathname: \"/\" } };\n            dispatch(userActions.login(username, password, from));\n        }\n    }\n\n    return (\n        <div className=\"col-lg-8 offset-lg-2\">\n            <h2>Login</h2>\n            <form name=\"form\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input type=\"text\" name=\"username\" value={username} onChange={handleChange} className={'form-control' + (submitted && !username ? ' is-invalid' : '')} />\n                    {submitted && !username &&\n                        <div className=\"invalid-feedback\">Username is required</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" name=\"password\" value={password} onChange={handleChange} className={'form-control' + (submitted && !password ? ' is-invalid' : '')} />\n                    {submitted && !password &&\n                        <div className=\"invalid-feedback\">Password is required</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\">\n                        {loggingIn && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                        Login\n                    </button>\n                    <Link to=\"/register\" className=\"btn btn-link\">Register</Link>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport { LoginPage };","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { userActions } from '../_actions';\n\nfunction RegisterPage() {\n    const [user, setUser] = useState({\n        firstName: '',\n        lastName: '',\n        username: '',\n        password: ''\n    });\n    const [submitted, setSubmitted] = useState(false);\n    const registering = useSelector(state => state.registration.registering);\n    const dispatch = useDispatch();\n\n    // reset login status\n    useEffect(() => {\n        dispatch(userActions.logout());\n    }, [dispatch]);\n\n    function handleChange(e) {\n        const { name, value } = e.target;\n        setUser(user => ({ ...user, [name]: value }));\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        setSubmitted(true);\n        if (user.firstName && user.lastName && user.username && user.password) {\n            dispatch(userActions.register(user));\n        }\n    }\n\n    return (\n        <div className=\"col-lg-8 offset-lg-2\">\n            <h2>Register</h2>\n            <form name=\"form\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>First Name</label>\n                    <input type=\"text\" name=\"firstName\" value={user.firstName} onChange={handleChange} className={'form-control' + (submitted && !user.firstName ? ' is-invalid' : '')} />\n                    {submitted && !user.firstName &&\n                        <div className=\"invalid-feedback\">First Name is required</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Last Name</label>\n                    <input type=\"text\" name=\"lastName\" value={user.lastName} onChange={handleChange} className={'form-control' + (submitted && !user.lastName ? ' is-invalid' : '')} />\n                    {submitted && !user.lastName &&\n                        <div className=\"invalid-feedback\">Last Name is required</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input type=\"text\" name=\"username\" value={user.username} onChange={handleChange} className={'form-control' + (submitted && !user.username ? ' is-invalid' : '')} />\n                    {submitted && !user.username &&\n                        <div className=\"invalid-feedback\">Username is required</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} className={'form-control' + (submitted && !user.password ? ' is-invalid' : '')} />\n                    {submitted && !user.password &&\n                        <div className=\"invalid-feedback\">Password is required</div>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\">\n                        {registering && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                        Register\n                    </button>\n                    <Link to=\"/login\" className=\"btn btn-link\">Cancel</Link>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport { RegisterPage };","import React, { useEffect } from 'react';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { history } from '../_helpers';\nimport { alertActions } from '../_actions';\nimport { PrivateRoute } from '../_components';\nimport { HomePage } from '../HomePage';\nimport { LoginPage } from '../LoginPage';\nimport { RegisterPage } from '../RegisterPage';\n\nfunction App() {\n    const alert = useSelector(state => state.alert);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        history.listen((location, action) => {\n            // clear alert on location change\n            dispatch(alertActions.clear());\n        });\n    }, [dispatch]);\n\n    return (\n        <div className=\"jumbotron\">\n            <div className=\"container\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {alert.message &&\n                        <div className={`alert ${alert.type}`}>{alert.message}</div>\n                    }\n                    <Router history={history}>\n                        <Switch>\n                            <PrivateRoute exact path=\"/\" component={HomePage} />\n                            <Route path=\"/login\" component={LoginPage} />\n                            <Route path=\"/register\" component={RegisterPage} />\n                            <Redirect from=\"*\" to=\"/\" />\n                        </Switch>\n                    </Router>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App ;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { store } from './_helpers';\n\n// setup fake backend\nimport { configureFakeBackend } from './_helpers';\nconfigureFakeBackend();\n\n\nReactDOM.render(\n  <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}